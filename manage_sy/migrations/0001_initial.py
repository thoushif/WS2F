# Generated by Django 3.0.4 on 2020-07-16 21:34

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254)),
                ('nickname', models.CharField(blank=True, default=' ', max_length=50, null=True)),
                ('companion_email', models.EmailField(blank=True, max_length=254, verbose_name='companion_email')),
                ('companion_name', models.CharField(blank=True, default=' ', max_length=100, null=True)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('-', 'Preferred Not to Mention')], default='-', max_length=10)),
                ('profile_pic', models.CharField(blank=True, default='static/manage_sy/profilepics/profile_avatar_contact_account_user_default-neutral.png', max_length=100)),
                ('is_first_registered', models.BooleanField(default=True)),
                ('companion_registered', models.BooleanField(default=False)),
                ('home_name', models.CharField(blank=True, default=' ', max_length=100, null=True)),
                ('companion_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SyItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=' ', max_length=500)),
                ('assigned_to', models.CharField(default=' ', max_length=100)),
                ('type', models.CharField(choices=[('R', 'Request For'), ('C', 'Confess It')], default='R', max_length=10)),
                ('happened_on', models.CharField(choices=[('t', 'Today'), ('y', 'Yesterday'), ('w', 'A week ago'), ('m', 'Around a month ago'), ('Y', 'An year ago'), ('-', 'I dont really remember')], default='-', max_length=10)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now_add=True)),
                ('color', models.CharField(blank=True, choices=[('R', 'Request For'), ('C', 'Confess It')], max_length=10, null=True)),
                ('active', models.BooleanField(default=False)),
                ('image_clue', models.CharField(blank=True, default='static/manage_sy/profilepics/profile_avatar_contact_account_user_default-neutral.png', max_length=1000)),
                ('notes', models.TextField()),
                ('response_type', models.CharField(blank=True, choices=[('Y', 'Accepted'), ('N', 'Rejected')], max_length=10, null=True)),
                ('response_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
